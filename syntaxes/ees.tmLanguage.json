{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Sintelix EES",
	"patterns": [
		{
			"include": "#expression"
		}
	],
	"repository": {
		"expression": {
			"patterns": [{"include": "#annotations"}, {"include": "#statements"}, {"include": "#keywords"}, {"include": "#strings"}, {"include": "#comments"}, {"include": "#variables"}, {"include": "#aliases"}, {"include": "#parentheses"}, {"include": "#functions"}, {"include": "#boolean"}]
		},	
		"annotations": {
			"patterns": [
				{
					"name": "annotation.general.ees",
					"match": "[a-zA-Z]+\\:"
				}
			]
		},
		"statements": {
			"patterns": [
				{
					"name": "statement.general.ees",
					"match": "\\#cond"
				},
				{
					"name": "statement.general.ees",
					"match": "\\#label"
				},
				{
					"name": "statement.general.ees",
					"match": "\\#alias"
				},
				{
					"name": "statement.general.ees",
					"match": "\\#section"
				},
				{
					"name": "statement.general.ees",
					"match": "\\#sectionend"
				},
				{
					"name": "statement.general.ees",
					"match": "\\#scope"
				},
				{
					"name": "statement.general.ees",
					"match": "\\#with"
				},
				{
					"name": "statement.general.ees",
					"match": "\\#"
				}
			]
		},
		"aliases": {
			"patterns": [
				{
					"name": "alias.general.ees",
					"match": "\\@[a-zA-Z0-9_]*"
				}
			]
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.ees",
				"match": "\\b(if|while|for|return)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.ees",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.ees",
					"match": "\\\\."
				}
			]
		},
		"parentheses": {
			"patterns": [
				{
					"name": "punctuation.definition.parameters.ees",
					"match": "\\("
				},
				{
					"name": "punctuation.definition.parameters.ees",
					"match": "\\)"
				},
				{
					"name": "punctuation.definition.curlyopen.ees",
					"match": "{"
				},
				{
					"name": "punctuation.definition.curlyclose.ees",
					"match": "}"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.ees",
					"match": "//.*$"
				},
				{
					"name": "comment.block.ees",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"boolean": {
			"patterns": [
				{
					"name": "ees.boolean.ees",
					"match": "(?<=(=|= ))\\b(true|false)\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.ees",
					"match": "\\+|-|\\*|/|==|!=|<|>|<=|>=|&&|\\|\\|"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "delete.inline.ees",
					"match": "\\$delete"
				},
				{
					"name": "ees.variable.ees",
					"match": "\\$[a-zA-Z0-9_]*"
				}				
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "ees.function.ees",
					"match": "(?<=\\s)([a-zA-Z0-9_]+)(?=\\()"
				}
			]
		}
	},
	"scopeName": "source.csg"
}